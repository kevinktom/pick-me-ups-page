{"version":3,"sources":["quotation-mark.svg","quote/Quote.tsx","home/Home.tsx","App.tsx","Root.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","axios","require","Quote","props","onAnimationStart","setState","fadeIn","onAnimationEnd","quotes","render","state","quote","author","fadeInClass","id","className","onClick","getRandomQuote","resetAnswers","style","display","src","quotationMark","alt","componentDidMount","getQuotes","that","answers","join","post","input","then","response","data","idx","getRandomNumber","length","minNum","Infinity","maxNum","Math","floor","random","React","Component","Home","slideRight","questions","onEnterKeyDown","event","key","preventDefault","onAnswerEnter","onTextAreaChange","currentAnswer","currentTarget","value","returnPreviousQuestion","lastAnswer","slice","generateRandomQuote","blankAnswers","i","push","slideRightClass","this","onChange","name","onKeyDown","href","process","App","exact","path","component","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dadf9a6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quotation-mark.d4e223d7.svg\";","import React from \"react\";\r\nimport './quote.css';\r\nimport quotationMark from \"../quotation-mark.svg\";\r\nconst axios = require(\"axios\");\r\n\r\ninterface QuoteObject {\r\n  quote?: string\r\n  author?: string\r\n}\r\n\r\nclass Quote extends React.Component<{resetAnswers: () => void, answers: string[]}, { quote: QuoteObject, fadeIn: boolean }>{\r\n  constructor(props: any){\r\n    super(props);\r\n    this.state = {\r\n      quote: {\r\n        \"quote\": \"\",\r\n        \"author\": \"\"\r\n      },\r\n      fadeIn: true\r\n    }\r\n  }\r\n\r\n  onAnimationStart = () => {\r\n    this.setState({\r\n      fadeIn: true\r\n    })\r\n  }\r\n\r\n  onAnimationEnd = () => {\r\n    this.setState({\r\n      fadeIn: false\r\n    })\r\n  }\r\n\r\n  public quotes: [] = [];\r\n\r\n  render = () => {\r\n    const {quote, author} = this.state.quote;\r\n    const fadeInClass = this.state.fadeIn ? \"fade-in\" : \"\";\r\n    return (\r\n      <>\r\n      <div id='quoteBody' className=\"container-quote\">\r\n        { quote &&\r\n          <div>\r\n            <div className=\"button-actions\" id=\"button-quote\">\r\n              <button onClick={this.getRandomQuote} className=\"fade-in\">Another quote</button>\r\n              <button onClick={this.props.resetAnswers} className=\"fade-in\">Reset</button>\r\n            </div>\r\n            <div style={{display:\"flex\"}} className=\"fade-in\">\r\n              <img src={quotationMark} alt=\"quotation mark\" className=\"quotation-mark-img\"/>\r\n            </div>\r\n            <div \r\n              className={`box-quote ${fadeInClass}`} \r\n              onAnimationEnd={this.onAnimationEnd}\r\n              onAnimationStart={this.onAnimationStart}\r\n            >\r\n              <div className=\"quotetext\">\r\n                {quote}\r\n              </div>\r\n              &nbsp; \r\n              <div className=\"author\">\r\n                - {author ? author : 'Unknown'}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getQuotes();\r\n  }\r\n\r\n  getQuotes = () => {\r\n    const that = this;\r\n    const answers = this.props.answers.join(' ');\r\n    axios.post(\"https://backend-pickmeups.herokuapp.com/api/quotes\", { input: answers })\r\n    .then(function(response: any) {\r\n      that.quotes = response.data;\r\n      that.getRandomQuote();\r\n      return response;\r\n    })\r\n  }\r\n\r\n  getRandomQuote = () => {\r\n    const idx = this.getRandomNumber(0, this.quotes.length);\r\n    this.setState({quote: this.quotes[idx]});\r\n    this.onAnimationEnd();\r\n    this.onAnimationStart();\r\n  }\r\n\r\n  getRandomNumber = (minNum: number = -Infinity, maxNum: number = Infinity) => {\r\n    return Math.floor(Math.random() * (maxNum - minNum) ) + minNum;\r\n  }\r\n}\r\n\r\nexport default Quote;\r\n","import React from \"react\";\r\nimport './home.css';\r\nimport Quote from \"../quote/Quote\";\r\n\r\nclass Home extends React.Component<{}, {answers: string[], currentAnswer: string, slideRight:boolean}>{\r\n  constructor(props: any){\r\n    super(props);\r\n    this.state = {\r\n      answers: [],\r\n      currentAnswer: '',\r\n      slideRight: true\r\n    }\r\n  }\r\n\r\n  onAnimationStart = () => {\r\n    this.setState({\r\n      slideRight: true\r\n    })\r\n  }\r\n\r\n  onAnimationEnd = () => {\r\n    this.setState({\r\n      slideRight: false\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const slideRightClass = this.state.slideRight ? \"slide-right\" : \"\";\r\n\r\n    return (\r\n      <div className=\"frame\">\r\n        <div className=\"container\">\r\n          <h1 id='header'>Pick me ups</h1>\r\n\r\n          {this.state.answers.length !== this.questions.length &&\r\n            <div id='cardBody'>\r\n              <div \r\n                className={`${slideRightClass}`}\r\n                onAnimationStart={this.onAnimationStart}\r\n                onAnimationEnd={this.onAnimationEnd}\r\n              >\r\n                <h2>{this.questions[this.state.answers.length]}</h2>\r\n              </div>\r\n              <textarea onChange={this.onTextAreaChange} value={this.state.currentAnswer} name=\"\" id=\"textareaBox\" onKeyDown={this.onEnterKeyDown}></textarea>\r\n              <div className=\"button-actions\">\r\n                <button onClick={this.onAnswerEnter}>Next Question</button>\r\n                {this.state.answers.length > 0 && <button onClick={this.returnPreviousQuestion}>Back</button>}\r\n                <button onClick={this.generateRandomQuote}>Enlighten Me</button>\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.state.answers.length === this.questions.length && <Quote resetAnswers={this.resetAnswers} answers={this.state.answers}></Quote>}\r\n      \r\n        </div>\r\n        <div id=\"footer\">\r\n          <a href=\"https://github.com/kevinktom/Pick-me-ups\"><img src={process.env.PUBLIC_URL + '/github_icon.png'} alt=\"\"/></a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  public questions = [\r\n    \"How are you feeling right now?\",\r\n    \"What do you think is causing you to feel this way?\",\r\n    \"How did you respond?\",\r\n    \"Is there anything you would like to get off your mind?\"\r\n  ]\r\n\r\n  onEnterKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if(event.key === 'Enter'){\r\n      event.preventDefault();\r\n      this.onAnswerEnter()\r\n    }\r\n  }\r\n\r\n  onTextAreaChange = (event: React.FormEvent<HTMLTextAreaElement>) => {\r\n    this.setState({currentAnswer: event.currentTarget.value})\r\n  }\r\n\r\n  onAnswerEnter = () => {\r\n    this.setState({answers: [...this.state.answers, this.state.currentAnswer], currentAnswer: ''});\r\n    this.onAnimationEnd();\r\n    this.onAnimationStart();\r\n  }\r\n\r\n  resetAnswers = () => {\r\n    this.setState({answers: [], currentAnswer: ''});\r\n  }\r\n\r\n  returnPreviousQuestion = () => {\r\n    const lastAnswer = this.state.answers.slice(-1)[0]\r\n    this.setState({answers: this.state.answers.slice(0,-1), currentAnswer: lastAnswer})\r\n  }\r\n\r\n  generateRandomQuote = () => {\r\n    const blankAnswers = [];\r\n    for(let i=0; i < this.questions.length; i++){\r\n      blankAnswers.push('');\r\n    }\r\n    this.setState({answers: blankAnswers});\r\n  }\r\n\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Home from \"./home/Home\";\r\nimport Quote from \"./quote/Quote\"\r\n\r\nconst App: React.FC = () => (\r\n  <>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/quote\" component={Quote} />\r\n    </Switch>\r\n  </>\r\n);\r\n\r\nexport default App;","import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst Root = () => (\r\n\t<HashRouter>\r\n\t\t<App />\r\n\t</HashRouter>\r\n);\r\n\r\nexport default Root;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css';\r\nimport Root from \"./Root\"\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}